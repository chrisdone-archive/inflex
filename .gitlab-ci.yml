variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"

stages:
  - env
  - build

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID               # Execute jobs in merge request context
    - if: $CI_COMMIT_BRANCH == 'master'      # Execute jobs when a new commit is pushed to master branch

patch:
  stage: env
  image: docker:stable
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /[patch]/
  # when: manual
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - IMAGE="${CI_REGISTRY_IMAGE}/patch:${CI_PIPELINE_ID}"
    - docker image build . -f docker/sky-above/inflex/patch.Dockerfile -t "$IMAGE"
    - docker push "$IMAGE"

prod:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  when: manual
  # only:
  #   variables:
  #     - $CI_COMMIT_MESSAGE =~ /[prod]$/
  script:
    - sed -i.bak "s/git@gitlab.com:/https:\/\/gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com\//" stack.yaml
    - IMAGE="${CI_REGISTRY_IMAGE}/prod:${CI_PIPELINE_ID}"
    - time docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - time docker image build . -f docker/sky-above/inflex/prod.Dockerfile -t "$IMAGE"
    - time docker push "$IMAGE"
