variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"

stages:
  - env
  - build
  - deploy

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID               # Execute jobs in merge request context
    - if: $CI_COMMIT_BRANCH == 'master'      # Execute jobs when a new commit is pushed to master branch

patch:
  stage: env
  image: docker:stable
  when: manual
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - IMAGE="${CI_REGISTRY_IMAGE}/patch:${CI_PIPELINE_ID}"
    - docker image build . -f docker/sky-above/inflex/patch.Dockerfile -t "$IMAGE"
    - docker push "$IMAGE"

prod:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  when: manual # Later, enable on master?
  script:
    - sed -i.bak "s/git@gitlab.com:/https:\/\/gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com\//" stack.yaml
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - IMAGE="${CI_REGISTRY_IMAGE}/prod:${CI_PIPELINE_ID}"
    - docker image build . -f docker/sky-above/inflex/prod.Dockerfile -t "$IMAGE"
    - docker push "$IMAGE"

deploy-prod:
  stage: deploy
  image: registry.gitlab.com/sky-above/inflex/deploy:2020-09-14
  when: manual
  script:
    - az login --service-principal --username "$AZ_SP_ID" --password "$AZ_SP_SECRET" --tenant "$AZ_TENANT_ID"
