* Feature
** UI
*** TODO [#B] "New" button
** Engine
*** TODO [#A] Add Rows
- [ ] Add row types to Duet
- [ ] Add RowE display to Editor for row types
- [ ] Add TableE (Vector (r :: Row)) display to Editor sum type
*** TODO [#A] Add Array
   - Note taken on [2020-03-06 Fri 17:54] \\
     This will serve as a warm up for the Duet, for implementing row types.
   - Note taken on [2020-03-06 Fri 17:41] \\
     Work in progress. Needs inference for Array type.
     e.g. data Array (a :: Type)
   - [X] Add a Array type to Duet
   - [X] Add inference for Array type
   - [X] Add stepper for Array
   - [X] Add a Array display to Editor sum type
   - [ ] Recursive editing  - build up a new Editor in the components
     (more efficient than string building)
#+BEGIN_SRC
[1,2,3]
=>
| 1 |
| 2 |
| 3 |
#+END_SRC
*** TODO [#C] Add TextE for String typed expressions
*** DONE Make sum type of results
   CLOSED: [2020-03-06 Fri 17:15]
   - Note taken on [2020-03-06 Fri 17:15] \\
     Made Editor type.

     #+BEGIN_SRC
     data Editor
       = IntegerE Integer
       -- | RationalE Rational
       -- | TextE Text
       -- | RecordE (HashMap Text Editor)
       -- | TableE (Array Text) (Array (HashMap Text Editor))
       | MiscE Text
       deriving (Show)
     #+END_SRC
   - State "DONE"       from "TODO"       [2020-03-06 Fri 17:15]
- [ ] Number
- [ ] List of numbers
- [ ] Table
- [ ] Text
*** DONE Get input value from Dec input
    CLOSED: [2020-02-29 Sat 15:27]
    - State "DONE"       from "TODO"       [2020-02-29 Sat 15:27]
*** DONE Make Haskell server load at runtime the app.js
    CLOSED: [2020-02-24 Mon 16:15]
    - State "DONE"       from "TODO"       [2020-02-24 Mon 16:15]
* Duet
** TODO Convert to trees that grow
** TODO Delete Alts and such
** TODO Implement CAS name generation
- [ ] de Brujin index
- [ ] mutually recursive groups are rewritten into one

Quoting Unison:

#+BEGIN_QUOTE
A term or type definition that’s part of a cycle of mutually recursive
definitions hashes to the form #x.n where x is the hash of the cycle
and n is the term or type’s index in its cycle. A cycle has a
canonical order determined by sorting all the members of the cycle by
their individual hashes (with the cycle removed).
#+END_QUOTE

* Testing
  - Note taken on [2020-03-07 Sat 11:29] \\
    https://hackage.haskell.org/package/validity-0.9.0.3/docs/src/Data.Validity.html#trivialValidation
  - Note taken on [2020-03-07 Sat 11:26] \\
    #+BEGIN_QUOTE
    syd
    have you tried producesValidsOnValids?
    it's basically totality testing
    #+END_QUOTE
** TODO Use PureScript to validity test QuickCheck generate code
- [ ] Should compile vs shouldn't -- if it compiles in PS implies it
  compiles in Duet
* Bugs
** UI
*** TODO [#C] Autofocus when starting the editor
*** TODO [#C] Autoresize input to match content length
* Supportive
** DONE Use psc-package-fast
   CLOSED: [2020-02-24 Mon 13:29]
   - State "DONE"       from "TODO"       [2020-02-24 Mon 13:29]
   - Note taken on [2020-02-24 Mon 13:29] \\
     Opened PR

     https://github.com/bitc/purescript-bundle-fast/pull/2

** DONE Put .psc-package in /dev/shm to avoid thrashing
   CLOSED: [2020-02-24 Mon 13:29]
   - State "DONE"       from "TODO"       [2020-02-24 Mon 13:29]

* Considerations
** TODO Server-side PureScript
   - Note taken on [2020-03-06 Fri 16:20] \\
     Use nodejs for now?
   - Note taken on [2020-03-06 Fri 16:17] \\
     SpiderMonkey probably quite stable?
   - Note taken on [2020-03-05 Thu 09:37] \\
     V8 binary:

     #+BEGIN_SRC
     console.log('waiting');
     setTimeout(function(){
     console.log('hi');
     }, 1000 * 3);
     console.log('me first');
     $ ./d8 test.js
     waiting
     me first
     hi
     #+END_SRC
   - Note taken on [2020-03-05 Thu 09:37] \\
     Investigation into Duktape: https://github.com/svaarala/duktape/issues/2241
   - Note taken on [2020-03-04 Wed 15:26] \\
     Use one of these binaries?

     https://bellard.org/quickjs/bench.html

     NodeJS doesn't have a DOM anyway!
*** DONE Review hs-duktape [NOT GOOD]
    CLOSED: [2020-03-04 Wed 11:03]
    - State "DONE"       from "TODO"       [2020-03-04 Wed 11:03]
    - Note taken on [2020-03-04 Wed 11:02] \\
      Not very satisfying:

      https://github.com/myfreeweb/hs-duktape/issues/11
      https://github.com/myfreeweb/hs-duktape/issues/10
    - Note taken on [2020-03-04 Wed 11:01] \\
      https://github.com/myfreeweb/hs-duktape/pull/7/files
    - Note taken on [2020-03-04 Wed 10:47] \\
      https://github.com/svaarala/duktape/issues/1853
    - Note taken on [2020-03-04 Wed 10:31] \\
      https://github.com/myfreeweb/hs-duktape/commit/931f5da36454bfb9c6231333f82b14265fb226c8#r37628869
    - Note taken on [2020-03-04 Wed 10:31] \\
      https://github.com/myfreeweb/hs-duktape/commit/68b2ea59fb9c708362007acdc5cb35aca2b0d365
* Competition
** Notebooks
   - Note taken on [2020-03-07 Sat 16:51] \\
     What’s Wrong with Computational Notebooks?
     Pain Points, Needs, and Design Opportunities
     https://web.eecs.utk.edu/~azh/pubs/Chattopadhyay2020CHI_NotebookPainpoints.pdf
